@page "/monitor"

<h1>Monitor</h1>

@if (Locker.LockerCUs == null)
{
<div class="abs-center">
    <div class="spinner-grow text-secondary"></div>
    <div class="spinner-grow text-secondary"></div>
    <div class="spinner-grow text-secondary"></div>
</div>
}
else
{
    <table class="table text-center">
        <thead>
            <tr>
                <th>Locker</th>
                <th>1</th>
                <th>2</th>
                <th>3</th>
                <th>4</th>
                <th>5</th>
                <th>6</th>
                <th>7</th>
                <th>8</th>
                <th>9</th>
                <th>10</th>
                <th>11</th>
                <th>12</th>
                <th>13</th>
                <th>14</th>
                <th>15</th>
                <th>16</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var CU in Locker.LockerCUs)
            {
                if (CU != null)
                {
                    <tr>
                        <td>@CU.CU.ToString()</td>

                        @for (int x = 0; x < CU.Box.Length; x++)
                        {
                            var f = x;
                            <td style="background-color:@(!CU.Box[x].Sensor?"red":"green")">
                                <a @onclick="args => Abrir(CU.CU, f)" style="text-decoration:none; color:white;"><span class="oi @(CU.Box[x].Door?"oi-lock-locked":"oi-lock-unlocked" )"></span></a>
                            </td>
                        }

                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {

    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        Locker.OnChange += Change;
        Locker.LockerCUs = await Cliente.GetState();
        Console.WriteLine("holas");
        Console.WriteLine("Locker.lockcu 1ero box count " + Locker.LockerCUs[0].Box.Count());
        Console.WriteLine("Locker.lockcu 1ero box 1ero " + Locker.LockerCUs[0].Box[0]);
        Console.WriteLine("Locker.lockcu 1ero box 1ero " + Locker.LockerCUs[0].Box[0].Box);
        Console.WriteLine("Locker.lockcu 1ero box 1ero " + Locker.LockerCUs[0].Box[0].Door);
        Console.WriteLine("Locker.lockcu 1ero box 1ero " + Locker.LockerCUs[0].Box[0].Id);
        Console.WriteLine("Locker.lockcu 1ero box 1ero " + Locker.LockerCUs[0].Box[0].Reservado);
        Console.WriteLine("Locker.lockcu 1ero box 1ero " + Locker.LockerCUs[0].Box[0].Sensor);

        
        Console.WriteLine("asdasd");
        Console.WriteLine("Locker.lockcu 1ero box 10ero " + Locker.LockerCUs[0].Box[10].Box);
        Console.WriteLine("Locker.lockcu 1ero box 10ero " + Locker.LockerCUs[0].Box[10].Door);
        Console.WriteLine("Locker.lockcu 1ero box 10ero " + Locker.LockerCUs[0].Box[10].Id);
        Console.WriteLine("Locker.lockcu 1ero box 10ero " + Locker.LockerCUs[0].Box[10].Reservado);
        Console.WriteLine("Locker.lockcu 1ero box 10ero " + Locker.LockerCUs[0].Box[10].Sensor);
    }

    private async void Change(object sender, EventArgs arg)
    {
        Locker.LockerCUs = await Cliente.GetState();
        StateHasChanged();
    }

    protected void Abrir(int locker, int box)
    {
        Console.WriteLine($"Set Locker {locker} - Box {box}");
        Cliente.OpenLocker(locker, box, "Miguel", "123456");
    }

}
